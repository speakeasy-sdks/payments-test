/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyMetadata } from "../../../internal/utils";
import { classToPlain, Expose } from "class-transformer";

/**
 * General status of all resources
 */
export enum Status {
    Pass = "PASS",
    Fail = "FAIL",
    Warn = "WARN",
}

/**
 * Contains health check information about a resource
 */
export class HealthCheckResource extends Error {
    /**
     * General status of all resources
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: Status;

    constructor(err?: HealthCheckResource) {
        super();
        if (err) {
            Object.assign(this, err);
            this.message = JSON.stringify(
                classToPlain(err, { exposeUnsetFields: false, excludeExtraneousValues: true })
            );
        }

        this.name = "HealthCheckResource";
        Object.setPrototypeOf(this, HealthCheckResource.prototype);
    }
}
