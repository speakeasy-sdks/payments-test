/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CaptureMethod } from "./capturemethod";
import { Expose } from "class-transformer";

/**
 * Payment Update
 */
export class PaymentPatch extends SpeakeasyBase {
    /**
     * Specifies the monetary value of the transaction performed.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    amount?: number;

    /**
     * To capture via separate API call, send captureMethod= ?Manual.? For immediate capture, send captureMethod= ?Now.? For automated delayed capture based on merchant profile setting (default is 120 minutes), send captureMethod= ?Delayed.?
     */
    @SpeakeasyMetadata()
    @Expose({ name: "captureMethod" })
    captureMethod?: CaptureMethod;

    /**
     * Specifies the monetary value paid by the consumer over and above the payment due for service.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "gratuityAmount" })
    gratuityAmount?: number;

    /**
     * (Deprecated) For auth only, send isCapture=false. For sale or update an authorized payment to capture, send isCapture=true.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "isCapture" })
    isCapture?: boolean;

    /**
     * Indicates whether tax should be collected for the item.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "isTaxable" })
    isTaxable?: boolean;

    /**
     * Void a payment
     */
    @SpeakeasyMetadata()
    @Expose({ name: "isVoid" })
    isVoid?: boolean;

    /**
     * Specifies the monetary value amount assessed to the transaction identified as Tax.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "taxAmount" })
    taxAmount?: number;
}
