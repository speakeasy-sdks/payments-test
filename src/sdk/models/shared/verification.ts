/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountHolder } from "./accountholder";
import { AccountOnFile } from "./accountonfile";
import { Currency } from "./currency";
import { InitiatorType } from "./initiatortype";
import { Merchant } from "./merchant";
import { RecurringSequence } from "./recurringsequence";
import { TransactionRoutingOverrideList } from "./transactionroutingoverridelist";
import { VerificationPaymentMethodType } from "./verificationpaymentmethodtype";
import { Expose, Type } from "class-transformer";

/**
 * Input verification information for API call
 */
export class Verification extends SpeakeasyBase {
    /**
     * Card owner properties
     */
    @SpeakeasyMetadata()
    @Expose({ name: "accountHolder" })
    @Type(() => AccountHolder)
    accountHolder?: AccountHolder;

    /**
     * The label given to indicate if the account number is stored, not stored, or is going to be stored by a merchant. Valid values: STORED NOT_STORED TO_BE_STORED
     */
    @SpeakeasyMetadata()
    @Expose({ name: "accountOnFile" })
    accountOnFile?: AccountOnFile;

    /**
     * Describes the currency type of the transaction
     */
    @SpeakeasyMetadata()
    @Expose({ name: "currency" })
    currency: Currency;

    /**
     * Describes the initiator of the transaction for the stored credential framework (MIT/CIT)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "initiatorType" })
    initiatorType?: InitiatorType;

    /**
     * Information about the merchant
     */
    @SpeakeasyMetadata()
    @Expose({ name: "merchant" })
    @Type(() => Merchant)
    merchant: Merchant;

    /**
     * A unique merchant assigned identifier for the confirmation of goods and/or services purchased. The merchant order provides the merchant a reference to the prices, quantity and description of goods and/or services to be delivered for all transactions included in the sale.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "merchantOrderNumber" })
    merchantOrderNumber?: string;

    /**
     * Object with one of the payment method type applicable for verification processing
     */
    @SpeakeasyMetadata()
    @Expose({ name: "paymentMethodType" })
    @Type(() => VerificationPaymentMethodType)
    paymentMethodType: VerificationPaymentMethodType;

    /**
     * Codifies the point in the recurring transaction by the consumer to the merchant for products or services.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "recurringSequence" })
    recurringSequence?: RecurringSequence;

    /**
     * List of transaction routing providers where the transaction be routed preferred by the merchant .
     */
    @SpeakeasyMetadata()
    @Expose({ name: "transactionRoutingOverrideList" })
    transactionRoutingOverrideList?: TransactionRoutingOverrideList[];

    /**
     * Provides textual information about data for the protocol for specifying addresses on the Internet (Universal Resource Locator - URL) for the merchant's organization.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "websiteShortMerchantUniversalResourceLocatorText" })
    websiteShortMerchantUniversalResourceLocatorText?: string;
}
