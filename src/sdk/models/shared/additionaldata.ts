/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Addition information receives from payment network.
 */
export class AdditionalData extends SpeakeasyBase {
    /**
     * The label of the entity acting as the acquiring bank through the payment processing network during settlement to the cardholders bank (the issuer). This may be different from Firm in Gateway solution such as Stone and Elavon.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "acquirerName" })
    acquirerName?: string;

    /**
     * Contains identifier generated by the acquirer.  For Visa, this is the ARN.  For Mastercard, this is the ARD.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "acquirerReferenceNumber" })
    acquirerReferenceNumber?: string;

    /**
     * 'The local date, in MMDD format, on which the transaction occurred'
     */
    @SpeakeasyMetadata()
    @Expose({ name: "authorizationDate" })
    authorizationDate?: string;

    /**
     * Optional field containing the network provided reason code indicating why the authorization did not qualify for CPS
     */
    @SpeakeasyMetadata()
    @Expose({ name: "downgradeReasonCode" })
    downgradeReasonCode?: string;

    /**
     * Describes the Electronic Commerce Indicator used in cardholder authentication on a network token
     */
    @SpeakeasyMetadata()
    @Expose({ name: "electronicCommerceIndicator" })
    electronicCommerceIndicator?: string;

    /**
     * Contains the electronic commerce indicators representing the security level and cardholder authentication associated with the transaction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "electronicCommerceSecurityLevelCode" })
    electronicCommerceSecurityLevelCode?: string;

    /**
     * Codifies Visa's classification of the merchant's industry provided at the time of the authorization.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "marketSpecificData" })
    marketSpecificData?: string;

    /**
     * Codifies the reason for declining a MasterCard and Visa recurring payment transaction and the actions merchants can take to continue to serve their recurring payment customers.  Valid values:  01 ? New account information available. Obtain new accoun
     */
    @SpeakeasyMetadata()
    @Expose({ name: "merchantAdviceCode" })
    merchantAdviceCode?: string;

    /**
     * Contains the original UCAF Collection Indicator sent by the acquirer in the Authorization Request message before the Identity Check downgrade or MDES SLI modification occurred.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "originalElectronicCommerceIndicator" })
    originalElectronicCommerceIndicator?: string;

    /**
     * Contains the original Security Level Indicators sent by the acquirer in the Authorization Request message before the Identity Check downgrade or MDES SLI modification occurred.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "originalElectronicCommerceSecurityLevelCode" })
    originalElectronicCommerceSecurityLevelCode?: string;

    /**
     * Codifies additional information for the conditions present when the authorization occurred. Examples include Normal Transaction, Card Not Present, Suspicious Transaction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "posConditionCode" })
    posConditionCode?: string;

    /**
     * Codifies how payment information is captured during the exchange of goods and services at the time of purchase.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "posEntryMode" })
    posEntryMode?: string;

    /**
     * If the entry mode has changed, the Issuer will respond with the 1-byte POS Entry Mode Change (Y)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "posEntryModeChanged" })
    posEntryModeChanged?: boolean;

    /**
     * Codifies th type of periodic billing that the cardholder and merchant have agreed for goods and services, such as utility bills and magazines, or Installment payments. The value in this field indicates that the message is being used for an installment payment. Possible values are: Space - default R - Recurring Payment Transaction I - Installment Payment C - Credential on File
     */
    @SpeakeasyMetadata()
    @Expose({ name: "posEnvironment" })
    posEnvironment?: string;

    /**
     * Codifies a constructed data element that is composed of three fields:  1. Transaction type code - describes the specific transaction type;  2. Account type code 1 - describes the account type affected for debits ("from");  3. Account type code 2 - describes the account type affected for credits ("to").  Aligns to ISO 8583 field 3.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "processingCode" })
    processingCode?: string;

    /**
     * Codifies issuer-supplied value assigned by Mastercard and Visa user to track card-level activity by card account number.  Sample Visa values: A - Visa Traditional/NA C - Visa Signature I - Visa Commerce L - Visa Corporate  Sample MasterCard values: MCF - MasterCard Fleet Card MCW - World MasterCard MDS - Debit MasterCard MCO - MasterCard Corporate
     */
    @SpeakeasyMetadata()
    @Expose({ name: "productId" })
    productId?: string;

    /**
     * Codifies the source that approved or declined the authorization request of a transaction sent to the payment network association.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "responseReasonCode" })
    responseReasonCode?: string;

    /**
     * Identifies a unique number assigned to each transaction by the merchant acquiring host and must be used to perform a void transaction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "retrievalReferenceNumber" })
    retrievalReferenceNumber?: string;

    /**
     * Codifies the information regarding the authorization that is important to the identification of the actions taken at the time of the authorization to reduce fraud.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "returnAci" })
    returnAci?: string;

    /**
     * The System Trace Audit Number (STAN) is assigned by a transaction originator to assist in identifying a card transaction. The STAN remains unchanged for the life of the card transaction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "systemTraceAuditNumber" })
    systemTraceAuditNumber?: string;

    /**
     * CAVV Verification Service enables issuers or VisaNet to validate cardholders' CAVVs resulting from issuers' authentication decisions during online Verified by Visa (VbV) purchase sessions. Authentication requests occur when merchants, acquirers, and ssuers participate in VbV. CAVV validation results are in request and response. Field 44.13 contains CAVV validation code. If V.I.P. performs validation, result code is in request V.I.P.forwards to issuer for approval decision. If issuer performs validation, CAVV validation result code is in response.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "validationCode" })
    validationCode?: string;
}
