/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountHolderOutput } from "./accountholderoutput";
import { AccountOnFile } from "./accountonfile";
import { Currency } from "./currency";
import { Information } from "./information";
import { InitiatorType } from "./initiatortype";
import { MerchantOutput } from "./merchantoutput";
import { RecurringSequence } from "./recurringsequence";
import { ResponseStatus } from "./responsestatus";
import { Risk } from "./risk";
import { TransactionRoutingOverrideList } from "./transactionroutingoverridelist";
import { VerificationPaymentMethodTypeOutput } from "./verificationpaymentmethodtypeoutput";
import { Expose, Type } from "class-transformer";

/**
 * Response information for verification API calls
 */
export class VerificationResponse extends SpeakeasyBase {
    /**
     * Card owner properties
     */
    @SpeakeasyMetadata()
    @Expose({ name: "accountHolder" })
    @Type(() => AccountHolderOutput)
    accountHolder?: AccountHolderOutput;

    /**
     * The label given to indicate if the account number is stored, not stored, or is going to be stored by a merchant. Valid values: STORED NOT_STORED TO_BE_STORED
     */
    @SpeakeasyMetadata()
    @Expose({ name: "accountOnFile" })
    accountOnFile?: AccountOnFile;

    /**
     * Describes the currency type of the transaction
     */
    @SpeakeasyMetadata()
    @Expose({ name: "currency" })
    currency: Currency;

    /**
     * Message received from Issuer, network or processor. Can be blank
     */
    @SpeakeasyMetadata()
    @Expose({ name: "hostMessage" })
    hostMessage: string;

    /**
     * Identifies unique identifier generated by the acquirer processing system and return to merchant for reference purposes.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "hostReferenceId" })
    hostReferenceId?: string;

    /**
     * A list of informational messages
     */
    @SpeakeasyMetadata()
    @Expose({ name: "information" })
    @Type(() => Information)
    information?: Information;

    /**
     * Describes the initiator of the transaction for the stored credential framework (MIT/CIT)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "initiatorType" })
    initiatorType?: InitiatorType;

    /**
     * Information about the merchant
     */
    @SpeakeasyMetadata()
    @Expose({ name: "merchant" })
    @Type(() => MerchantOutput)
    merchant?: MerchantOutput;

    /**
     * A unique merchant assigned identifier for the confirmation of goods and/or services purchased. The merchant order provides the merchant a reference to the prices, quantity and description of goods and/or services to be delivered for all transactions included in the sale.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "merchantOrderNumber" })
    merchantOrderNumber?: string;

    /**
     * Object with one of the payment method type applicable for verification processing
     */
    @SpeakeasyMetadata()
    @Expose({ name: "paymentMethodType" })
    @Type(() => VerificationPaymentMethodTypeOutput)
    paymentMethodType: VerificationPaymentMethodTypeOutput;

    /**
     * Codifies the point in the recurring transaction by the consumer to the merchant for products or services.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "recurringSequence" })
    recurringSequence?: RecurringSequence;

    /**
     * Merchant identifier for the request. The value must be unique.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "requestId" })
    requestId: string;

    /**
     * Short explanation for response status
     */
    @SpeakeasyMetadata()
    @Expose({ name: "responseCode" })
    responseCode: string;

    /**
     * Long explanation of response code
     */
    @SpeakeasyMetadata()
    @Expose({ name: "responseMessage" })
    responseMessage: string;

    /**
     * The label given to the state of a response to a request submitted by a consumer through the Firm's Application Program Interface (API) that matches a test case. Valid Values: ERROR,SUCCESS, DENIED
     */
    @SpeakeasyMetadata()
    @Expose({ name: "responseStatus" })
    responseStatus: ResponseStatus;

    /**
     * Response information for transactions
     */
    @SpeakeasyMetadata()
    @Expose({ name: "risk" })
    @Type(() => Risk)
    risk?: Risk;

    /**
     * Designates the hour, minute, seconds and date (if timestamp) or year, month, and date (if date) when the transaction (monetary or non-monetary) occurred.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "transactionDate" })
    transactionDate?: string;

    /**
     * Identifier of a resource
     */
    @SpeakeasyMetadata()
    @Expose({ name: "transactionId" })
    transactionId: string;

    /**
     * List of transaction routing providers where the transaction be routed preferred by the merchant .
     */
    @SpeakeasyMetadata()
    @Expose({ name: "transactionRoutingOverrideList" })
    transactionRoutingOverrideList?: TransactionRoutingOverrideList[];
}
