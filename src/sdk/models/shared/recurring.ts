/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RFCDate } from "../../types";
import { RecurringSequence } from "./recurringsequence";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Recurring Payment Object
 */
export class Recurring extends SpeakeasyBase {
    /**
     * System generated value used to uniquely identify a set of statements presented to the customer whom has acknowledged the acceptance in order to use the online systems.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "agreementId" })
    agreementId?: string;

    /**
     * Designates the year (YYYY), month (MM), and day (D) at which the agreement with the payer to process payments expires. Used with recurring transaction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "paymentAgreementExpiryDate" })
    @Type(() => String)
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    paymentAgreementExpiryDate?: RFCDate;

    /**
     * Codifies the point in the recurring transaction by the consumer to the merchant for products or services.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "recurringSequence" })
    recurringSequence?: RecurringSequence;
}
