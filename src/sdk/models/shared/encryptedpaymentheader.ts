/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * header information for Encrypted Data from ApplePay or GooglePay
 */
export class EncryptedPaymentHeader extends SpeakeasyBase {
    /**
     * Provides textual information about a cipher key for exchanging data via an associated string or byte image. This is a public key generated by the merchant and shared with Firm. In this context, this key is called ephemeral for its short life span.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ephemeralPublicKey" })
    ephemeralPublicKey?: string;

    /**
     * This is the hash output using a hash function for the Ephemeral Public Key.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "publicKeyHash" })
    publicKeyHash?: string;
}
